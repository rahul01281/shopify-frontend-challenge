{"version":3,"sources":["Navbar.js","Nominations.js","App.js","index.js"],"names":["Navbar","className","Nominations","useState","movieName","setMovieName","movieResults","setMovieResults","nominations","setNominations","finished","setFinished","searchMovies","a","axios","get","undefined","res","data","Search","useEffect","length","type","placeholder","onChange","e","target","value","style","margin","map","movie","Title","Year","onClick","addNomination","disabled","includes","nomination","id","imdbID","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAUeA,G,YARA,WACX,OACI,qBAAKC,UAAU,SAAf,SACI,+BAAI,mBAAGA,UAAU,gBAAjB,uB,wDCkGGC,EApGK,WAAO,IAAD,EAEcC,mBAAS,IAFvB,mBAEdC,EAFc,KAEHC,EAFG,OAIoBF,mBAAS,IAJ7B,mBAIdG,EAJc,KAIAC,EAJA,OAMkBJ,mBAAS,IAN3B,mBAMdK,EANc,KAMDC,EANC,OAQYN,oBAAS,GARrB,mBAQdO,EARc,KAQJC,EARI,KAchBC,EAAY,uCAAG,4BAAAC,EAAA,sEACCC,IAAMC,IAAN,gEAAmEX,IADpE,YAGOY,KAFlBC,EADW,QAGTC,KAAKC,QACTZ,EAAgBU,EAAIC,KAAKC,QAJZ,2CAAH,qDAwBlB,OARAC,qBAAU,WACNT,EAAYH,EAAYa,QAAU,KACnC,CAACb,IAEJY,qBAAU,WACNR,MACD,CAACR,IAGA,cAAC,WAAD,UACI,qBAAKH,UAAU,SAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,uBAAOqB,KAAK,OAAOrB,UAAU,QAAQsB,YAAY,cAAcC,SAjClE,SAACC,GACdpB,EAAaoB,EAAEC,OAAOC,YAkCV,sBAAK1B,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAK2B,MAAO,CAACC,OAAO,QAApB,SACI,+CAAkBzB,EAAlB,SAGJ,qBAAKH,UAAU,aAAf,SACKK,EAAawB,KAAI,SAACC,GAAD,OACd,sBAAK9B,UAAU,gBAAf,UACI,+BAAK8B,EAAMC,MAAX,KAAoBD,EAAME,KAA1B,OACA,wBAAQhC,UAAU,gBAAgBiC,QAAS,kBAjCzD,SAACH,GACnBtB,EAAe,GAAD,mBAAKD,GAAL,CAAkBuB,KAgCiDI,CAAcJ,IAC/DK,SAAY5B,EAAY6B,SAASN,IAAUrB,EAD3C,iCAOhB,sBAAKT,UAAU,cAAf,UACI,qBAAK2B,MAAO,CAACC,OAAO,QAApB,SACI,+CAEJ,qBAAK5B,UAAU,aAAf,SAC4B,IAAvBO,EAAYa,OACT,8BACKb,EAAYsB,KAAI,SAACQ,GAAD,OACb,sBAAKrC,UAAU,gBAAf,UACI,6BAAKqC,EAAWN,QAChB,wBAAQ/B,UAAU,gBAAgBiC,QAAS,kBA9C7DK,EA8CoFD,EAAWE,YA7CrH/B,EAAeD,EAAYiC,QAAO,SAACV,GAAD,OAAWA,EAAMS,SAAWD,MADzC,IAACA,GA8CkB,4BAKZ,2DAMf7B,EACG,sBAAKT,UAAU,eAAf,UACI,sDADJ,uCAIA,sBAAKA,UAAU,eAAf,oBACW,iCAAS,EAAIO,EAAYa,SADpC,+CC7ETqB,MATf,WACE,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.32a6a6f7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Navbar = () => {\n    return (\n        <div className=\"navbar\">\n            <h1><i className=\"fas fa-film\" /> The Shoppies</h1>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Nominations = () => {\n\n    const [ movieName, setMovieName ] = useState('');\n\n    const [ movieResults, setMovieResults ] = useState([]);\n\n    const [ nominations, setNominations ] = useState([]);\n\n    const [ finished, setFinished ] = useState(false);\n\n    const onChange = (e) => {\n        setMovieName(e.target.value);\n    }\n\n    const searchMovies = async () => {\n        const res = await axios.get(`https://www.omdbapi.com/?apikey=b0e73700&type=movie&s=${movieName}`);\n\n        if (res.data.Search !== undefined){\n            setMovieResults(res.data.Search);\n        }\n    }\n\n    const addNomination = (movie) => {\n        setNominations([...nominations, movie]);\n    }\n\n    const removeNomination = (id) => {\n        setNominations(nominations.filter((movie) => movie.imdbID !== id))\n    }\n\n    useEffect(() => {\n        setFinished(nominations.length >= 5)\n    }, [nominations])\n\n    useEffect(() => {\n        searchMovies();\n    }, [movieName]);\n\n    return (\n        <Fragment>\n            <div className=\"layout\">\n                <div className=\"container\">\n                    <div className=\"search-bar\">\n                        <input type=\"text\" className=\"input\" placeholder=\"Search Here\" onChange={onChange} />\n                    </div>\n                    <div className=\"lower-row\">\n                        <div className=\"content-box\">\n                            <div style={{margin:'10px'}}>\n                                <h4>Results for \"{movieName}\"</h4>\n                            </div>\n                            \n                            <div className=\"result-box\">\n                                {movieResults.map((movie) => (\n                                    <div className=\"search-result\">\n                                        <h6>{movie.Title} ({movie.Year})</h6>\n                                        <button className=\"result-button\" onClick={() => addNomination(movie)}\n                                        disabled = {nominations.includes(movie) || finished}\n                                        >Nominate</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"content-box\">\n                            <div style={{margin:'10px'}}>\n                                <h4>Nominations</h4>\n                            </div>\n                            <div className=\"result-box\">\n                                {nominations.length !== 0 ? (\n                                    <div>\n                                        {nominations.map((nomination) => (\n                                            <div className=\"search-result\">\n                                                <h5>{nomination.Title}</h5>\n                                                <button className=\"result-button\" onClick={() => removeNomination(nomination.imdbID)}>Remove</button>\n                                            </div>\n                                        ))}\n                                    </div>\n                                ) : (\n                                    <p>No nominations yet</p>\n                                )}\n                                \n                            </div>\n                        </div>\n                    </div>\n                    {finished ? (\n                        <div className=\"instructions\">\n                            <strong>Congratulations!</strong> You have selected your 5 movies.\n                        </div>\n                    ) : (\n                        <div className=\"instructions\">\n                            Select <strong>{5 - nominations.length}</strong> movies to nominate for Shoppies!\n                        </div>\n                    )}\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\n\n\nexport default Nominations\n","import React, { Fragment } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Nominations from './Nominations';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Navbar />\n      <Nominations /> \n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}