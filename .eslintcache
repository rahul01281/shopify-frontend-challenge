[{"/Users/rahulrinwa/Desktop/shopify-frontend-challenge/src/index.js":"1","/Users/rahulrinwa/Desktop/shopify-frontend-challenge/src/App.js":"2","/Users/rahulrinwa/Desktop/shopify-frontend-challenge/src/Nominations.js":"3","/Users/rahulrinwa/Desktop/shopify-frontend-challenge/src/Navbar.js":"4"},{"size":220,"mtime":1610233890318,"results":"5","hashOfConfig":"6"},{"size":261,"mtime":1610317079151,"results":"7","hashOfConfig":"6"},{"size":4014,"mtime":1610317955404,"results":"8","hashOfConfig":"6"},{"size":206,"mtime":1610317717170,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"15d0f14",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rahulrinwa/Desktop/shopify-frontend-challenge/src/index.js",[],["20","21"],"/Users/rahulrinwa/Desktop/shopify-frontend-challenge/src/App.js",[],"/Users/rahulrinwa/Desktop/shopify-frontend-challenge/src/Nominations.js",["22"],"import React, { Fragment, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Nominations = () => {\n\n    const [ movieName, setMovieName ] = useState('');\n\n    const [ movieResults, setMovieResults ] = useState([]);\n\n    const [ nominations, setNominations ] = useState([]);\n\n    const [ finished, setFinished ] = useState(false);\n\n    const onChange = (e) => {\n        setMovieName(e.target.value);\n    }\n\n    const searchMovies = async () => {\n        const res = await axios.get(`https://www.omdbapi.com/?apikey=b0e73700&type=movie&s=${movieName}`);\n\n        if (res.data.Search !== undefined){\n            setMovieResults(res.data.Search);\n        }\n    }\n\n    const addNomination = (movie) => {\n        setNominations([...nominations, movie]);\n    }\n\n    const removeNomination = (id) => {\n        setNominations(nominations.filter((movie) => movie.imdbID !== id))\n    }\n\n    useEffect(() => {\n        setFinished(nominations.length >= 5)\n    }, [nominations])\n\n    useEffect(() => {\n        searchMovies();\n    }, [movieName]);\n\n    return (\n        <Fragment>\n            <div className=\"layout\">\n                <div className=\"container\">\n                    <div className=\"search-bar\">\n                        <input type=\"text\" className=\"input\" placeholder=\"Search Here\" onChange={onChange} />\n                    </div>\n                    <div className=\"lower-row\">\n                        <div className=\"content-box\">\n                            <div style={{margin:'10px'}}>\n                                <h4>Results for \"{movieName}\"</h4>\n                            </div>\n                            \n                            <div className=\"result-box\">\n                                {movieResults.map((movie) => (\n                                    <div className=\"search-result\">\n                                        <h6>{movie.Title} ({movie.Year})</h6>\n                                        <button className=\"result-button\" onClick={() => addNomination(movie)}\n                                        disabled = {nominations.includes(movie) || finished}\n                                        >Nominate</button>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"content-box\">\n                            <div style={{margin:'10px'}}>\n                                <h4>Nominations</h4>\n                            </div>\n                            <div className=\"result-box\">\n                                {nominations.length !== 0 ? (\n                                    <div>\n                                        {nominations.map((nomination) => (\n                                            <div className=\"search-result\">\n                                                <h5>{nomination.Title}</h5>\n                                                <button className=\"result-button\" onClick={() => removeNomination(nomination.imdbID)}>Remove</button>\n                                            </div>\n                                        ))}\n                                    </div>\n                                ) : (\n                                    <p>No nominations yet</p>\n                                )}\n                                \n                            </div>\n                        </div>\n                    </div>\n                    {finished ? (\n                        <div className=\"instructions\">\n                            <strong>Congratulations!</strong> You have selected your 5 movies.\n                        </div>\n                    ) : (\n                        <div className=\"instructions\">\n                            Select <strong>{5 - nominations.length}</strong> movies to nominate for Shoppies!\n                        </div>\n                    )}\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\n\n\nexport default Nominations\n","/Users/rahulrinwa/Desktop/shopify-frontend-challenge/src/Navbar.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":40,"column":8,"nodeType":"29","endLine":40,"endColumn":19,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchMovies'. Either include it or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [movieName, searchMovies]",{"range":"36","text":"37"},[1038,1049],"[movieName, searchMovies]"]